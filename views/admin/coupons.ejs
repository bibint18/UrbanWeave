<%-include('../../views/partials/admin/header')%>
  <title>Coupons Page</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  <style>
    /* Basic reset */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: Arial, sans-serif;

      color: #fff;
      padding: 20px;
    }

    .container {
      max-width: 1200px;
      margin: auto;
    }

    .header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
    }

    .header h1 {
      font-size: 1.5em;
      font-weight: bold;
    }

    .header .icons {
      display: flex;
      gap: 15px;
    }

    .header .icons i {
      font-size: 1.2em;
      cursor: pointer;
    }

    .search-bar {
      display:flex;
      max-width: 250px;
      
    }

    .search-bar input {
      width: 100%;
      padding: 8px;
      border-radius: 5px;
      border: 1px solid grey;
      outline: none;
    }
    .btn-search{
      padding: 3px;
      border-radius: 15px;
      color:black;
      border: none;
      background-color: #8da7ab;
    }
    .btn-search:hover{
      background-color: #3a3a55;
      color: white;
    }
    .search-form{
      display: contents;
    }

    /* Table styling */
    .product-table {
      width: 100%;
      border-collapse: collapse;
      background-color: #040407;
      border-radius: 10px;
      overflow: hidden;
    }

    .product-table th,
    .product-table td {
      padding: 30px;
      text-align: left;
    }

    .product-table th {
      background-color: #3a3a55;
      font-size: 0.9em;
      color: white;
    }

    .product-table td {
      border-bottom: 1px solid #3a3a55;
      font-size: 0.85em;
      color: white;
    }

    .product-table .status-active {
      color: #28a745;
      font-weight: bold;
    }

    .product-table .status-expired {
      color: #dc3545;
      font-weight: bold;
    }

    .actions i {
      font-size: 1.2em;
      margin: 0 8px;
      cursor: pointer;
    }

    .actions .edit {
      color: #f0ad4e;
    }

    .actions .view {
      color: #17a2b8;
    }

    .actions .delete {
      color: #dc3545;
    }

    .btn {
      background-color: #3a3a55;
      color: white;
    }

    .btn:hover {
      background-color: rgb(167, 152, 152);
    }

    form label {
      color: black;
    }

    label {
      color: black
    }

    /* Responsive styling */
    @media (max-width: 768px) {

      .header,
      .product-table th,
      .product-table td {
        font-size: 0.8em;
      }

      .header h1 {
        font-size: 1.2em;
      }

      .search-bar {
        max-width: 180px;
      }

      .actions i {
        margin: 0 4px;
      }
    }

    @media (max-width: 576px) {
      .header {
        flex-direction: column;
        gap: 10px;
      }

      .product-table {
        font-size: 0.7em;
      }

      .product-table th,
      .product-table td {
        padding: 10px;
      }
    }
  </style>
  </head>

  <body>

    <div class="container">
      <div class="header">
        <h1>Coupons</h1>
        <div class="icons">
          <i class="fas fa-moon"></i>
          <i class="fas fa-bell"></i>
          <i class="fas fa-cog"></i>
          <button class="btn " data-bs-toggle="modal" data-bs-target="#addCouponModal">
            Add Coupon
          </button>
          <div class="search-bar">
            <form class="search-form" action="/admin/coupons" method="get">
            <input type="text" name="search" value="<%=search || '' %>" placeholder="Search...">
            <button class="btn-search">Search</button>
          </form>
          <% if(search) { %> 
            <a class="btn-search ms-2" href="/admin/coupons"> <button class="btn-search">Clear</button></a>
            <% } %>
          </div>
        </div>
      </div>

      <table class="product-table">
        <thead>
          <tr>
            <!-- <th>Product Name & Type</th> -->
            <!-- <th>Price</th> -->
            <th>Discount</th>
            <th>Code</th>
            <th>Start Date</th>
            <th>End Date</th>
            <th>Status</th>
            <th>Action</th>
          </tr>
        </thead>
        <tbody>
          <% coupons.forEach(coupon=> { %>
            <tr>
              <!-- <td><img src="product1.png" alt="Product" width="30"> Black T-shirt<br><small>Fashion</small></td>
                <td>$80.00</td> -->
              <td>
                <%= coupon.discount%>
              </td>
              <td>
                <%= coupon.code%>
              </td>
              <td>
                <%= new Date(coupon.startDate).toLocaleDateString('en-GB') %>
              </td>
              <td>
                <%= new Date(coupon.endDate).toLocaleDateString('en-GB') %>
              </td>
              <td><span class="status-active">
                  <% if (new Date(coupon.endDate) < Date.now()) { %>
                    <span class="status-inactive" style="color: red;">Inactive</span>
                    <% } else { %>
                      <span class="status-active">
                        <%= coupon.status %>
                      </span>
                      <% } %>
                </span></td>
              <td class="actions">
                <i class="fas fa-eye view"></i>
                <i class="fas fa-edit edit" data-bs-toggle="modal"
                  data-bs-target="#editCouponModal<%= coupon._id %>"></i>
                <i class="fas fa-trash-alt delete" onclick="DeleteCoupon('<%=coupon._id%>')"> </i>
              </td>
            </tr>
            <div class="modal fade" id="editCouponModal<%= coupon._id %>" tabindex="-1"
              aria-labelledby="editCouponModalLabel" aria-hidden="true">
              <div class="modal-dialog">
                <div class="modal-content">
                  <div class="modal-header">
                    <h5 class="modal-title" id="editCouponModalLabel">Edit Coupon</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                  </div>
                  <div class="modal-body">
                    <form method="" action="">
                      <div class="mb-3">
                        <label for="couponCode<%= coupon._id %>" class="form-label">Coupon Code</label>
                        <input type="text" class="form-control" id="couponCode<%= coupon._id %>" name="couponCode"
                          value="<%= coupon.code %>">
                      </div>
                      <div class="mb-3">
                        <label for="couponDiscount<%= coupon._id %>" class="form-label">Discount</label>
                        <input type="number" class="form-control" id="couponDiscount<%= coupon._id %>"
                          name="couponDiscount" value="<%= coupon.discount %>" min="1" max="80">
                        <div id="error-dis-message-<%= coupon._id %>" style="color: red; margin-top: 5px;"></div>
                      </div>
                      <div class="mb-3">
                        <label for="startDate<%= coupon._id %>" class="form-label">Start Date</label>
                        <input type="date" class="form-control" id="startDate<%= coupon._id %>" name="startDate"
                          value="<%= new Date(coupon.startDate).toISOString().split('T')[0] %>">
                      </div>
                      <div class="mb-3">
                        <label for="endDate<%= coupon._id %>" class="form-label">End Date</label>
                        <input type="date" class="form-control" id="endDate<%= coupon._id %>" name="endDate"
                          value="<%= new Date(coupon.endDate).toISOString().split('T')[0] %>">
                      </div>
                      <div class="mb-3">
                        <label for="minimum<%= coupon._id %>" class="form-label">Minimum Purchase</label>
                        <input type="text" class="form-control" id="minimum<%= coupon._id %>" name="minimum"
                          value="<%= coupon.minimum %>">
                      </div>
                      <div class="mb-3">
                        <label for="maximum<%= coupon._id %>" class="form-label">Maximum Purchase</label>
                        <input type="text" class="form-control" id="maximum<%= coupon._id %>" name="maximum"
                          value="<%= coupon.maximum %>">
                        <div id="error-message-<%= coupon._id %>" style="color: red; margin-top: 5px;"></div>
                      </div>
                      <div class="mb-3">
                        <label for="Maxdiscount<%= coupon._id %>" class="form-label">Maximum Discount</label>
                        <input type="text" class="form-control" id="Maxdiscount<%= coupon._id %>" name="Maxdiscount"
                          value="<%= coupon.maximumDiscount %>">
                      </div>
                      <button type="submit" class="btn btn-primary"
                        onclick="submitCouponForm('<%= coupon._id %>',event)">Save Changes</button>
                    </form>
                  </div>
                </div>
              </div>
            </div>
            <% }) %>
              <!-- Repeat similar <tr> for other products -->
        </tbody>
      </table>
    </div>
    <!--modal-->
    <div class="modal fade" id="addCouponModal" tabindex="-1" aria-labelledby="addCouponModalLabel" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="addCouponModalLabel">Add New Coupon</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <form id="addCouponForm">
              <div class="mb-3">
                <label for="couponCode" class="form-label">Coupon Code</label>
                <input type="text" class="form-control" id="couponCode" name="code" placeholder="Enter coupon code">
                <div class="error-message" id="couponCodeError"></div>
              </div>
              <div class="mb-3">
                <label for="startDate" class="form-label">Start Date</label>
                <input type="date" class="form-control" id="startDate" name="start_date" placeholder="Starting Date">
                <div class="error-message" id="startDateError"></div>
              </div>
              <div class="mb-3">
                <label for="endDate" class="form-label">End Date</label>
                <input type="date" class="form-control" id="endDate" name="end_date" placeholder="Ending Date">
                <div class="error-message" id="endDateError"></div>
              </div>
              <div class="mb-3">
                <label for="minimum" class="form-label">Minimum Purchase</label>
                <input type="text" class="form-control" id="minimum" name="minimum">
                <div class="error-message" id="minimumError"></div>
              </div>
              <div class="mb-3">
                <label for="maximum" class="form-label">Maximum Purchase</label>
                <input type="text" class="form-control" id="maximum" name="maximum">
                <div class="error-message" id="maximumError"></div>
              </div>
              <div class="mb-3">
                <label for="discount" class="form-label">Coupon Offer Percentage</label>
                <input type="number" class="form-control" id="discount" name="discount" >
                <div class="error-message" id="discountError"></div>
              </div>
              <div class="mb-3">
                <label for="discount" class="form-label">Maximum Discount Amount</label>
                <input type="number" class="form-control" id="Maxdiscount" name="Maxdiscount" min="1">
                <div class="error-message" id="MaxDiscountError"></div>
              </div>
              <div class="mb-3">
                <label for="status" class="form-label">Status</label>
                <select class="form-select" id="status" name="status" required>
                  <option value="active">Active</option>
                  <option value="inactive">Inactive</option>
                </select>
                <div class="error-message" id="statusError"></div>
              </div>
              <button type="submit" class="btn btn-primary">Add Coupon</button>
            </form>
          </div>
        </div>
      </div>
    </div>
    <!--edit-->



    <script>

      document.addEventListener('DOMContentLoaded', () => {
        // Get today's date in the format 'YYYY-MM-DD'
        const today = new Date().toISOString().split('T')[0];

        // Select all startDate and endDate inputs in the modal
        document.querySelectorAll('input[type="date"]').forEach(dateInput => {
          dateInput.setAttribute('min', today);
        });
      });


      function submitCouponForm(CouponID, event) {
        event.preventDefault();
        let code = document.getElementById(`couponCode${CouponID}`).value;
        let startDate = document.getElementById(`startDate${CouponID}`).value
        let endDate = document.getElementById(`endDate${CouponID}`).value
        let minimum = parseInt(document.getElementById(`minimum${CouponID}`).value)
        let maximum = parseInt(document.getElementById(`maximum${CouponID}`).value)
        let discount = parseInt(document.getElementById(`couponDiscount${CouponID}`).value)
        let Maxdiscount = parseInt(document.getElementById(`Maxdiscount${CouponID}`).value)
        console.log("INnside function: ", code, startDate, endDate, minimum
          , maximum, discount, Maxdiscount
        )
        if (minimum >= maximum) {
          let errorElement = document.getElementById(`error-message-${CouponID}`);
          errorElement.textContent = 'Minimum purchase should be less than the maximum purchase.';
          return;
        }
        if (discount < 1 || discount > 80) {
          let errorElement = document.getElementById(`error-dis-message-${CouponID}`);
          errorElement.textContent = 'Discount should be between 1 and 80.';
          return;
        }
        let errorElement = document.getElementById(`error-message-${CouponID}`);
        let errorElement2 = document.getElementById(`error-dis-message-${CouponID}`);
        if (errorElement) {
          errorElement.textContent = '';
        }
        if (errorElement2) {
          errorElement2.textContent = '';
        }

        fetch(`/admin/coupon/edit/${CouponID}`, {
          method: 'post',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ code: code, startDate: startDate, endDate: endDate, minimum: minimum, maximum: maximum, discount: discount, Maxdiscount: Maxdiscount })
        })
          .then(response => response.json())
          .then((data) => {
            if (data.success) {
              Swal.fire({
                icon: 'success',
                title: "Coupon Updated",
                text: "Coupon Updated Succefully!",
                timer: 1500,
                showConfirmButton: false
              })
                .then(() => {
                  window.location.reload()
                })
            } else {
              Swal.fire({
                icon: 'error',
                title: "ERROR",
                text: data.message,
                timer: 1500,
                showConfirmButton: false
              })
            }
          })
      }

      document.addEventListener('DOMContentLoaded', function () {
        const addCouponForm = document.getElementById('addCouponForm');
        const today = new Date().toISOString().split('T')[0];

        // Set minimum dates
        document.getElementById('startDate').setAttribute('min', today);
        document.getElementById('endDate').setAttribute('min', today);

        addCouponForm.addEventListener('submit', function (event) {
          event.preventDefault();

          // Clear previous errors
          document.querySelectorAll('.error-message').forEach(div => div.textContent = '');

          const code = document.getElementById('couponCode').value.trim();


          const startDate = document.getElementById('startDate').value;
          let endDate = document.getElementById('endDate').value;
          const minimum = parseFloat(document.getElementById('minimum').value.trim());
          const maximum = parseFloat(document.getElementById('maximum').value.trim());
          const discount = parseFloat(document.getElementById('discount').value.trim());
          const Maxdiscount = parseFloat(document.getElementById('Maxdiscount').value.trim());
          console.log(Maxdiscount);

          const status = document.getElementById('status').value;

          let isValid = true;

          if (!code) {
            document.getElementById('couponCodeError').textContent = 'Please enter a coupon code.';
            isValid = false;
          }
          if (!startDate) {
            document.getElementById('startDateError').textContent = 'Please select a start date.';
            isValid = false;
          } else if (new Date(startDate) < new Date(today)) {
            document.getElementById('startDateError').textContent = 'Start date cannot be in the past.';
            isValid = false;
          }
          if (!endDate) {
            document.getElementById('endDateError').textContent = 'Please select an end date.';
            isValid = false;
          } else if (new Date(endDate) < new Date(today)) {
            document.getElementById('endDateError').textContent = 'End date cannot be in the past.';
            isValid = false;
          } else if (new Date(endDate) < new Date(startDate)) {
            document.getElementById('endDateError').textContent = 'End date cannot be before the start date.';
            isValid = false;
          }
          if (isNaN(minimum) || minimum < 0) {
            document.getElementById('minimumError').textContent = 'Minimum purchase must be a non-negative number.';
            isValid = false;
          }
          if (isNaN(maximum) || maximum < 0) {
            document.getElementById('maximumError').textContent = 'Maximum purchase must be a non-negative number.';
            isValid = false;
          }
          if (isNaN(discount) || discount < 1 || discount > 80) {
            document.getElementById('discountError').textContent = 'Discount must be between 1 and 80.';
            isValid = false;
          }
          if (!status) {
            document.getElementById('statusError').textContent = 'Please select a status.';
            isValid = false;
          }
          if (!Maxdiscount) {
            document.getElementById('MaxdiscountError').textContent = 'Please enter a maximum discount.';
          }

          // Check if minimum is less than maximum
          if (!isNaN(minimum) && !isNaN(maximum) && minimum >= maximum) {
            document.getElementById('maximumError').textContent = 'Maximum purchase must be greater than minimum purchase.';
            isValid = false;
          }
          if (isValid && endDate) {
            let endDateObj = new Date(endDate);
            endDateObj.setHours(23, 59, 59, 999);  // Set endDate to the last moment of the day
            endDate = endDateObj  // Update the endDate to match the backend format
          }
          if (isValid) {
            fetch("/admin/coupons/add", {
              method: 'post',
              headers: {
                "Content-Type": "application/json"
              },
              body: JSON.stringify({ code: code, start_date: startDate, end_date: endDate, minimum: minimum, maximum: maximum, discount: discount, Maxdiscount: Maxdiscount, status: status })
            })
              .then(response => response.json())
              .then(data => {
                if (data.success) {
                  Swal.fire({
                    icon: "success",
                    title: "Coupon Added Successfully",
                    text: "Added",
                    timer: 1500,
                    showConfirmButton: false
                  })
                    .then(() => {
                      location.reload()
                    })
                } else {
                  Swal.fire({
                    icon: "error",
                    title: "Error",
                    text: data.message,
                    timer: 1500,
                    showConfirmButton: false
                  })
                }
              })
              .catch((error) => {
                Swal.fire({
                  icon: "error",
                  title: "Error",
                  text: error.message,
                  timer: 1500,
                  showConfirmButton: false
                })
              })
          }
        });
      });



      function DeleteCoupon(CouponId) {
        console.log("Coupon ID:", CouponId);
        const couponId = CouponId
        console.log("cooo: ", couponId);

        Swal.fire({
          icon: "warning",
          title: "are you sure",
          text: "Are  you sure you want to delete this coupon",
          showCancelButton: true,
          confirmButtonText: "Yes, delete it!",
        })
          .then(result => {
            if (result.isConfirmed) {
              fetch(`/admin/coupon/delete/${couponId}`, {
                method: "post",
                headers: {
                  "Content-Type": "application/json"
                }
              })
                .then(response => response.json())
                .then(data => {
                  if (data.success) {
                    Swal.fire({
                      icon: "success",
                      title: "Coupon Deleted",
                      text: "Coupon has been deleted successfully",
                      timer: 1500,
                      showConfirmButton: false
                    })
                      .then(() => {
                        location.reload()
                      })
                  } else {
                    Swal.fire({
                      icon: "error",
                      title: 'Error deleting',
                      text: "Failed to delete the coupon",
                      timer: 11500,
                      showConfirmButton: false
                    })
                  }
                })
                .catch((error) => {
                  console.error(error);
                  Swal.fire({
                    icon: "error",
                    title: "ERROR",
                    text: "something Went Wrong!",
                    timer: 11500,
                    showConfirmButton: false
                  })
                })
            }
          })
      }
    </script>

    <style>
      .error-message {
        color: red;
        font-size: 0.875em;
        margin-top: 0.25em;
      }
    </style>

  <%-include('../../views/partials/admin/footer')%>
