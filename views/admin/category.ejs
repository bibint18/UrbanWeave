<%- include("../../views/partials/admin/header")%>
<Style>
  .search-bar {
      display:flex;
      max-width: 250px;
      
    }

    .search-bar input {
      width: 100%;
      padding: 8px;
      border-radius: 5px;
      border: 1px solid grey;
      outline: none;
    }
    .btn-search{
      padding: 3px;
      border-radius: 15px;
      color:black;
      border: none;
      background-color: #8da7ab;
    }
    .btn-search:hover{
      background-color: #3a3a55;
      color: white;
    }
    .search-form{
      display: contents;
    }

  .pagination {
  display: flex;
  gap: 0.5rem;
  justify-content: center;
  padding: 1rem;
}
.pagination-link {
  text-decoration: none;
  color: #333;
  padding: 0.5rem 1rem;
  border: 1px solid #ddd;
  border-radius: 4px;
  font-weight: 500;
  transition: background-color 0.3s, color 0.3s;
}

.pagination-link:hover {
  background-color: #007bff;
  color: #fff;
  border-color: #007bff;
}
.pagination-link.active {
  background-color: #007bff;
  color: #fff;
  font-weight: bold;
  border-color: #007bff;
}
</Style>
  <main class="main-wrap ms-3">
    <div class="container">
      <div class="d-flex justify-content-between">
        <h2>Category Management</h2>
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addCategoryModal">Add New
          Category</button>

            <div class="search-bar">
            <form class="search-form" action="/admin/category" method="get">
            <input type="text" name="search" value="<%=search || '' %>" placeholder="Search...">
            <button class="btn-search">Search</button>
          </form>
          <% if(search) { %> 
            <a class="btn-search ms-2" href="/admin/category"> <button class="btn-search">Clear</button></a>
            <% } %>
          </div>
      </div>

      <table class="table table-bordered mt-3">
        <thead>
          <tr>
            <th>Category Name</th>
            <th>Description</th>
            <th>Status</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody>
          <% categories.forEach(category=> { %>
            <tr>
              <td>
                <%= category.categoryName %>
              </td>
              <td>
                <%= category.description %>
              </td>
              <td>
                <%= category.isDeleted ? 'Deleted' : 'Active' %>
              </td>
              <td>
                <button class="btn btn-warning" data-bs-toggle="modal"
                  data-bs-target="#editCategoryModal-<%= category._id %>">Edit</button>
                <button class="btn btn-danger" onclick="return softDelete('<%= category._id %>')">Delete</button>
              </td>
            </tr>
            <% }) %>
        </tbody>
      </table>

            <div class="pagination">
  <% if (currentPage > 1) { %>
    <a href="?page=<%= currentPage - 1 %>&search=<%= encodeURIComponent(search) %>" class="pagination-link">Previous</a>
  <% } %>
  <% for (let i = 1; i <= totalPages; i++) { %>
    <a href="?page=<%= i %>&search=<%= encodeURIComponent(search) %>" class="pagination-link <%= i === currentPage ? 'active' : '' %>"><%= i %></a>
  <% } %>
  <% if (currentPage < totalPages) { %>
    <a href="?page=<%= currentPage + 1 %>&search=<%= encodeURIComponent(search) %>" class="pagination-link">Next</a>
  <% } %>
</div>

    </div>

    <!-- Edit Modals -->
    <% categories.forEach(category=> { %>
      <div class="modal fade" id="editCategoryModal-<%= category._id %>" tabindex="-1">
        <div class="modal-dialog">
          <div class="modal-content">
            <form onsubmit="return EditCategory(event,'<%= category._id %>', this)">
              <div class="modal-header">
                <h5 class="modal-title">Edit Category</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
              </div>
              <div class="modal-body">
                <div class="form-group mb-2">
                  <label>Category Name</label>
                  <input type="text" name="categoryName" value="<%= category.categoryName %>" class="form-control"
                    required>
                </div>
                <div class="form-group mb-2">
                  <label>Description</label>
                  <textarea name="description" class="form-control" required><%= category.description %></textarea>
                </div>
              </div>
              <div class="modal-footer">
                <button type="submit" class="btn btn-primary">Save changes</button>
              </div>
            </form>
          </div>
        </div>
      </div>
      <% }) %>

        <!-- Add Category Modal -->
        <div class="modal fade" id="addCategoryModal" tabindex="-1">
          <div class="modal-dialog">
            <div class="modal-content">
              <form action="/admin/category/add" method="post" id="addForm" onclick=" return AddCategory()">
                <div class="modal-header">
                  <h5 class="modal-title">Add New Category</h5>
                </div>
                <div class="modal-body">
                  <div class="form-group">
                    <label>Category Name</label>
                    <input type="text" name="categoryName" id="categoryname" class="form-control" required>

                  </div>
                  <div class="form-group">
                    <label>Description</label>
                    <textarea name="description" class="form-control" id="description" required></textarea>
                  </div>
                </div>
                <div class="modal-footer">
                  <button type="submit" class="btn btn-primary">Add Category</button>
                </div>
              </form>
            </div>
          </div>
  </main>
  <script>





        function EditCategory(event, userId,form) {
          event.preventDefault();
          console.log("inside ajax")
    const CategoryName = form.querySelector('input[name="categoryName"]').value.trim();
      const Description = form.querySelector('textarea[name="description"]').value.trim();
      console.log()
          if (!CategoryName || !Description) {
            Swal.fire({
              icon: "error",
              title: 'Empty Spaces',
              text: 'Please fill all fields',
            })
            return false
          }

          $.ajax({
            type: "POST",
            url: `/admin/category/edit/${userId}`,
            data: {
              categoryName: CategoryName,
              description: Description,
            },
            success: function (response) {
              if (response.success) {
                Swal.fire({
                  icon: "success",
                  title: 'Category Updated',
                  text: 'Category Updated Successfully',
                  timer:1500,
                  showConfirmButton:false
                }).then(() => {
                  window.location.href = '/admin/category'
                })
              } else {
                Swal.fire({
                  icon: "error",
                  title: 'Error',
                  text: response.message || 'Failed to update category',
                  timer:1500,
                  showConfirmButton:false
                })
              }
            },
            error: function (jqXHR, textStatus, errorThrown) {
              let message = 'Category already exist';
          if (jqXHR.responseJSON && jqXHR.responseJSON.message) {
            message = jqXHR.responseJSON.message;
          }
              Swal.fire({
                icon: "error",
                title: 'OOps',
                text: message,
                timer:1500,
                showConfirmButton:false
              })
            }
          })
          return false
        }

    function AddCategory(event) {
      event.preventDefault()
      const categoryName = document.getElementById('categoryname').value.trim()
      const description = document.getElementById('description').value.trim()
      console.log("cat", categoryName, "des", description)
      console.log("inside");
      if (!categoryName || !description) {
        Swal.fire({
          icon: 'error',
          title: "Empty spaces",
          text: "Empty values are not allowed",
          timer: 2000,
          showConfirmButton: false
        })
        return false
      }
      axios.post("/admin/category/add", { categoryName, description })
        .then((response) => {
          if (response.data.success) {
            Swal.fire({
              icon: "success",
              title: "Category Added Successfully",
              text: "added",
              timer: 1500,
              showConfirmButton: false
            }).then(() => {
              window.location.href = '/admin/category'
            })
          } else {
            Swal.fire({
              icon: "error",
              title: "Error occured",
              text: response.data.message,
              timer: 1500,
              showConfirmButton: false
            })
          }
        })

        .catch((error) => {
          if (error.response && error.response.data) {
            console.log(error?.response?.success || "erroror")
            Swal.fire({
              icon: "error",
              title: "oops",
              text: error.response.data.message,
              timer: 1500,
              showConfirmButton: false
            })
          }
        })

      return false
    }


    document.getElementById('addForm').addEventListener('submit', AddCategory)




    function softDelete(userId) {
      Swal.fire({
        title: 'Are you sure?',
        text: 'Do you really want to delete this category?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Yes, delete it!',
        cancelButtonText: 'No, cancel',
        reverseButtons: true
      }).then((result) => {
        if (result.isConfirmed) {
          // Proceed with deletion if confirmed
          $.ajax({
            type: "DELETE",
            url: `/admin/category/delete/${userId}`,
            success: function (response) {
              Swal.fire({
                title: 'Deleted!',
                text: 'Category deleted successfully.',
                icon: 'success',
                timer: 1500,
                showConfirmButton: false
              }).then(() => {
                location.reload(); // Reload the page after the alert is closed
              });
            },
            error: function (error) {
              Swal.fire({
                title: 'Error!',
                text: 'There was an error deleting the category.',
                icon: 'error',
                timer: 1500,
                showConfirmButton: false
              }).then(() => {
                location.reload(); // Reload the page after the alert is closed
              });
            }
          });
        } else {
          Swal.fire({
            title: 'Cancelled',
            text: 'Category not deleted.',
            icon: 'info',
            timer: 1500,
            showConfirmButton: false
          });
        }
      });
    }

  </script>
  <%- include("../../views/partials/admin/footer")%>