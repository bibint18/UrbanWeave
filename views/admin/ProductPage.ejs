<%-include('../../views/partials/admin/header')%>
  <style>
    .size-stock-list {
      list-style-type: none;
      /* Remove bullet points */
      padding: 0;
      /* Remove padding */
      margin: 0;
      /* Remove margin */
    }

    .size-stock-item {
      display: inline-flex;
      /* Use inline-flex for alignment */
      align-items: center;
      margin-right: 15px;
      /* Space between items */
    }

    .stock-box {
      display: inline-block;
      /* Make it inline-block */
      padding: 3px 5px;
      /* Smaller padding */
      border: 1px solid #ccc;
      /* Light border */
      border-radius: 3px;
      /* Rounded corners */
      background-color: #f9f9f9;
      /* Light background color */
      margin-left: 5px;
      /* Space between size and stock box */
    }

    .line-break {
      display: block;
      /* Break line */
      width: 100%;
      /* Full width for line break */
      margin-top: 5px;
      /* Space between lines */
    }

    .pagination {
      display: flex;
      gap: 0.5rem;
      justify-content: center;
      padding: 1rem;
    }

    /* Pagination link styling */
    .pagination-link {
      text-decoration: none;
      color: #333;
      padding: 0.5rem 1rem;
      border: 1px solid #ddd;
      border-radius: 4px;
      font-weight: 500;
      transition: background-color 0.3s, color 0.3s;
    }

    /* Hover effect */
    .pagination-link:hover {
      background-color: #007bff;
      color: #fff;
      border-color: #007bff;
    }

    /* Active page styling */
    .pagination-link.active {
      background-color: #007bff;
      color: #fff;
      font-weight: bold;
      border-color: #007bff;
    }
    .headerForSearch{
	display:flex;
	justify-content:space-between
     }
     .clearButton{
      display: flex;
      padding-bottom: 24px;
    }
  </style>

  <head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css">
  </head>
  <div class="content-header">
    <div>
      <h2 class="content-title card-title">Products</h2>
    </div>
  </div>
  <header class="headerForSearch card-header mb-20" d-flex justify-content-between>
    <div class="clearButton">
    <form action="/admin/product/search" method="get" class="d-inline">
      <div class="input-group input-group-sm border border-1 border-grey rounded-pill"
        style="width: 500px; margin-left: 0px;">
        <input type="text" class="form-control border-0 rounded-pill" placeholder="Search products or brands"
          name="search" value="<%= searchQuery || '' %>">
        <button class="btn  border-0" type="submit">Search</button>
      </div>
    </form>
    <% if(searchQuery) { %> 
    <button class="btn" onclick="location.href='/admin/product'">Clear</button>
    <% } %>
  </div>

   <form id="CategoryForm" method="GET" action="/admin/product" class="d-inline">
      <label>Sort by category:</label>
      <select class="form-select" name="categoryQuery" onchange="document.getElementById('CategoryForm').submit()">
        <option value="">All Categories</option>
        <% categories.forEach((category) => { %>
          <option value="<%= category._id %>" <%= category._id.toString() === categoryQuery ? 'selected' : '' %>>
            <%= category.categoryName %>
          </option>
        <% }) %>
      </select>
    </form>
  </header>
  <div class="right mt-5">
    <table class="table table-striped">
      <thead>
        <tr>
          <th scope="col"><b> Product name</b></th>
          <!-- <th scope="col"><b>Brand</b></th> -->
          <th scope="col"><b>Category</b></th>
          <th scope="col"><b>Sale Price</b></th>
          <th scope="col"><b>Offer Price</b></th>
          <th scope="col"><b>Offer</b></th>
          <th scope="col"><b>Quantity</b></th>
          <th scope="col"><b>Action</b></th>
          <th scope="col"><b>Edit</b></th>
        </tr>
      </thead>
      <tbody>
        <% products.forEach(product=> {%>
          <tr data-product-id="<%= product._id %>">
            <td>
              <%= product.ProductName %>
            </td>
            <!-- <td></td> -->
            <td>
              <%= product.category.categoryName %>
            </td>
            <td>
              <%= product.salePrice %>
            </td>
            <td>
              <% if(product.productOffer){ %>
                <%= product.productOffer %>
                  <% }else {%>
                    0%
                    <% } %>
            </td>
            <td>
              <% if(product.productOffer===0) { %>
                <button class="btn btn-info" onclick="AddOffer('<%= product._id%>')" style="width: 100px;">Add Offer
                  <!-- <a href="#" class="text-white">Add Offer</a> -->
                </button>
                <%}else{%>
                  <button class="btn btn-info" onclick="removeOffer('<%= product._id%>')" style="width: 100px;">Remove
                    <!-- <a href="#" class="text-white">Remove</a> -->
                  </button>
                  <%}%>
            </td>
            <!-- <td><%= product.quantity %></td> -->

            <!-- <td>
                <ul>
                  <% product.sizes.forEach(size => { %>
                    <li><strong><%= size.size %>:</strong> <%= size.stock %></li>
                  <% }) %>
                </ul>
              </td> -->

            <td>
              <ul class="size-stock-list">
                <% product.sizes.forEach((size, index)=> { %>
                  <li class="size-stock-item">
                    <span class="size-text"><strong>
                        <%= size.size %>:
                      </strong></span>
                    <span class="stock-box">
                      <%= size.stock %>
                    </span>
                  </li>
                  <% if ((index + 1) % 2===0) { %>
                    <li class="line-break"></li> <!-- Add a break every two sizes -->
                    <% } %>
                      <% }) %>
              </ul>
            </td>

            <td>
              <% if(product.isBlocked===false) {%>
                <button class="btn btn-danger" style="width: 80px;" onclick="blockProduct('<%= product._id%>')">
                  <!-- <a href="/admin/product/block?id=<%= product._id %>" class="text-white"
                    style="text-decoration: none;">Block</a> -->
                    Block
                </button>
                <%}else{%>
                  <button class="btn btn-success" style="width: 80px;" onclick="unblockProduct('<%= product._id%>')">UnBlock
                    <!-- <a href="/admin/product/unblock?id=<%=product._id%>" class="text-white"
                      style="text-decoration: none;">Unblock</a> -->
                  </button>
                  <%}%>
            </td>
            <td>
              <button class="btn btn-info" style="width: 80px;">
                <a href="/admin/product/getEdit?id=<%=product._id%>" class="text-white"
                  style="text-decoration: none;">Edit</a>
              </button>
            </td>
          </tr>
          <% }) %>
      </tbody>

    </table>
  </div>
  </div>
  </div>

  <div class="container mt-3">
  </div>



  <div class="pagination">
    <% if (currentPage> 1) { %>
      <a href="?page=<%= currentPage - 1 %>&search=<%=searchQuery%>&categoryQuery=<%= categoryQuery %>" class="pagination-link">Previous</a>
      <% } %>

        <% for (let i=1; i <=totalPages; i++) { %>
          <a href="?page=<%= i %>&search=<%=searchQuery%>&categoryQuery=<%= categoryQuery %>" class="pagination-link <%= i === currentPage ? 'active' : '' %>">
            <%= i %>
          </a>
          <% } %>

            <% if (currentPage < totalPages) { %>
              <a href="?page=<%= currentPage + 1 %>&search=<%=searchQuery%>&categoryQuery=<%= categoryQuery %>" class="pagination-link">Next</a>
              <% } %>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
  <script>
    async function AddOffer(productId) {
      const { value: amount } = await Swal.fire({
        title: "Enter Offer Value in percentge",
        input: 'number',
        inputLabel: "percentage",
        inputPlaceholder: "%"
      })
      console.log(amount)
  if (!amount || isNaN(amount) || Number(amount) <= 0) {
    await Swal.fire('Please enter a valid percentage greater than 0');
    return;
  }

  if (Number(amount) > 70) {
    await Swal.fire('Offer cannot be greater than 70%');
    return;
  }
      $.ajax({
        url: '/admin/product/offer/add',
        method: "post",
        data: {
          percentage: amount,
          productId: productId
        },
        success: function (response) {
          if (response.success) {
            Swal.fire({
              icon: "success",
              title: 'Offer added',
              text: 'Offer applied succesfully',
              timer: 1500,
              showConfirmButton:false
            })
            .then(() => {
              window.location.reload();
            })
          } else {
            Swal.fire({
              icon: "error",
              title: 'Error',
              text: 'Offer not added',
              timer: 1500,
              showConfirmButton:false
            })
          }
        }
      })
    }

    async function removeOffer(productId) {
      console.log("inside remove")
      try {
        Swal.fire({
          icon: 'warning',
          title: "Remove offer",
          text: "Are you sure you want to remove offer",
          showCancelButton: true,
          confirmButtonText: 'yes, Remove it',
        }).then(async (result) => {
          if (result.isConfirmed) {
            $.ajax({
              url: '/admin/product/offer/remove',
              method: "post",
              data: {
                productId: productId
              },
              success: function (response) {
                console.log(response)
                if (response.success) {
                  Swal.fire({
                    icon: "success",
                    title: "offer removed",
                    text: "Offer removed succesfully",
                    timer:1500,
                    timerProgressBar: true,
                    showConfirmButton:false
                  })
                  .then(() => {
                    window.location.reload();
                  })
                } else {
                  Swal.fire({
                    icon: "error",
                    title: "Error",
                    text: 'error removing offer',
                    timer: 1500,
                    timerProgressBar: true,
                    showConfirmButton:false
                  })
                }

              }
            })

          } else {
            console.log("not confirmed")
          }
        })
      } catch (error) {
        console.log(error)
      }
    }


      async function blockProduct(productId) {
      console.log("inside remove")
      try {
        Swal.fire({
          icon: 'warning',
          title: "Block Product ",
          text: "Are you sure you want to block product",
          showCancelButton: true,
          confirmButtonText: 'yes, Block it',
        }).then(async (result) => {
          if (result.isConfirmed) {
            $.ajax({
              url: '/admin/product/block/',
              method: "post",
              data: {
                productId: productId
              },
              success: function (response) {
                console.log(response)
                if (response.success) {
                                    const row = $(`tr[data-product-id="${productId}"]`);
                console.log('Found row:', row.length, row);
                if (row.length) {
                  const button = row.find('td:nth-child(7) button');
                  button.text('UnBlock');
                  button.attr('class', 'btn btn-success'); // Update class to btn-success
                  button.attr('onclick', `unblockProduct('${productId}')`);
                  Swal.fire({
                    icon: "success",
                    title: "Product Blocked",
                    text: "Product blocked succesfully",
                    timer:1500,
                    timerProgressBar: true,
                    showConfirmButton:false
                  })
                  }
                } else {
                  Swal.fire({
                    icon: "error",
                    title: "Error",
                    text: 'error blocking product',
                    timer: 1500,
                    timerProgressBar: true,
                    showConfirmButton:false
                  })
                }

              }
            })

          } else {
            console.log("not confirmed")
          }
        })
      } catch (error) {
        console.log(error)
      }
    }

    async function unblockProduct(productId) {
      console.log("inside remove")
      try {
        Swal.fire({
          icon: 'warning',
          title: "Unblock Product ",
          text: "Are you sure you want to Unblock product",
          showCancelButton: true,
          confirmButtonText: 'yes, Unblock it',
        }).then(async (result) => {
          if (result.isConfirmed) {
            $.ajax({
              url: '/admin/product/unblock/',
              method: "post",
              data: {
                productId: productId
              },
              success: function (response) {
                console.log(response)
                if (response.success) {
                  const row = $(`tr[data-product-id="${productId}"]`);
                console.log('Found row:', row.length, row);
                if (row.length) {
                  const button = row.find('td:nth-child(7) button');
                  button.text('Block');
                  button.attr('class', 'btn btn-danger'); // Update class to btn-danger
                  button.attr('onclick', `blockProduct('${productId}')`);
                  Swal.fire({
                    icon: "success",
                    title: "Product unBlocked",
                    text: "Product Unblocked succesfully",
                    timer:1500,
                    timerProgressBar: true,
                    showConfirmButton:false
                  })
                }
                  // .then(() => {
                  //   window.location.reload();
                  // })
                } else {
                  Swal.fire({
                    icon: "error",
                    title: "Error",
                    text: 'error unblocking product',
                    timer: 1500,
                    timerProgressBar: true,
                    showConfirmButton:false
                  })
                }

              }
            })

          } else {
            console.log("not confirmed")
          }
        })
      } catch (error) {
        console.log(error)
      }
    }
  </script>
<%-include('../../views/partials/admin/footer')%>
