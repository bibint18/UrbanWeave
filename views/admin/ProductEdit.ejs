<%-include('../../views/partials/admin/header')%>

    <head>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
    </head>
    <style>
        .error-message {
            color: red;
        }

        .thumbnails-container {
            display: flex;
            overflow-x: auto;
        }

        .thumbnail {
            margin-right: 10px;
        }

        /* Added for general error messages */
        .general-error {
            color: red;
            margin-bottom: 10px;
            display: none;
        }
    </style>
    <section class="content-main">
        <div class="row">
            <div class="col-9">
                <div class="content-header">
                    <h2 class="content-title">Edit Product</h2>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="card mb-4">
                    <div class="card-body">
                        <!-- Added general error container -->
                        <div id="general-error" class="general-error"></div>
                        <form id="editProductForm" method="post" action="/admin/product/edit/<%=products._id%>" enctype="multipart/form-data">
                            <div class="mb-4">
                                <label for="product_name" class="form-label">Product</label>
                                <input type="text" placeholder="Type here" name="productName"
                                    class="form-control border" id="product_name" value="<%=products.ProductName%>">
                                <div id="productName-error" class="error-message"></div>
                            </div>
                            <div class="mb-4">
                              <label class="form-label">Full description</label>
                              <input name="descriptionData" value="<%=products.description%>" class="form-control border"
                                  rows="4" id="descriptionid">
                                  <div id="description-error" class="error-message"></div>
                          </div>
                            <div class="row">
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Regular price</label>
                                        <input placeholder="$" name="regularPrice" id='regularPrice' type="text"
                                            class="form-control border" value="<%=products.regularPrice%>">
                                        <div id="regularPrice-error" class="error-message"></div>
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Sale price</label>
                                        <input placeholder="$" name="salePrice" type="text" class="form-control border" value="<%=products.salePrice%>">
                                        <div id="salePrice-error" class="error-message"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-4">
                                    <div class="product-form mb-3">
                                        <div class="d-flex flex-row gap-4 align-item-center">
                                            <label class="form-label">sizes:</label>
                                          <div>
                                            <label class="mr-5" for="size_s">S</label>
                                            <input type="text" name="sizes[s]" id="size_s" min="0" maxlength="3" class="tiny-box" value="<%= products.sizes.find(sizeObj => sizeObj.size === 'S') ? products.sizes.find(sizeObj => sizeObj.size === 'S').stock : '' %>"> 
                                            <div id="sizeS-error" class="error-message"></div>
                                          </div>
                                          <div>
                                            <label class="mr-5" for="size_m">M</label>
                                            <input type="text" name="sizes[m]" id="size_m" min="0" maxlength="3" class="tiny-box" value="<%= products.sizes.find(sizeObj => sizeObj.size === 'M') ? products.sizes.find(sizeObj => sizeObj.size === 'M').stock : '' %>" >
                                            <div id="sizeM-error" class="error-message"></div>
                                          </div>
                                          <div>
                                            <label class="mr-5" for="size_l">L</label>
                                            <input type="text" name="sizes[l]" id="size_l" min="0" maxlength="3" class="tiny-box" value="<%= products.sizes.find(sizeObj => sizeObj.size === 'L') ? products.sizes.find(sizeObj => sizeObj.size === 'L').stock : '' %>" >
                                            <div id="sizeL-error" class="error-message"></div>
                                          </div>
                                          <div>
                                            <label class="mr-5" for="size_xl">XL</label>
                                            <input type="text" name="sizes[xl]" id="size_xl" min="0" maxlength="3" class="tiny-box" value="<%= products.sizes.find(sizeObj => sizeObj.size === 'XL') ? products.sizes.find(sizeObj => sizeObj.size === 'XL').stock : '' %>" >
                                            <div id="sizeXL-error" class="error-message"></div>
                                          </div>
                                        </div>
                                      </div>
                                </div>
                            </div>
                            <div class="card mb-4">
                                <div class="card-body">
                                    <div class="row gx-2">
                                        <div class="col-sm-6 mb-3">
                                            <label class="form-label">Category</label>
                                            <select class="form-select border" style="width: 150px;" name="category">
                                                <!-- Display the product's current category first, if it exists -->
                                                <% if (products.category) { %>
                                                    <option value="<%= products.category._id %>" selected>
                                                        <%= products.category.categoryName %> <%= products.category.isDeleted ? '(Deleted)' : '' %>
                                                    </option>
                                                <% } %>
                                                <!-- Then list all other active categories, excluding the current one -->
                                                <% categories.forEach(category => { %>
                                                    <% if (!products.category || category._id.toString() !== products.category._id.toString()) { %>
                                                        <option value="<%= category._id %>">
                                                            <%= category.categoryName %>
                                                        </option>
                                                    <% } %>
                                                <% }) %>
                                            </select>
                                            <div id="category-error" class="error-message"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="card mb-2">
                                <div class="card-header">
                                    <h4>Choose images</h4>
                                </div>
                                <div class="border row">
                                    <div id="addedImagesContainer" class="thumbnails-container"></div>
                                </div>
                                <div class="row">
                                    <% for(let i=0; i<products.productImage.length; i++) { %>
                                    <div class="col-md-12">
                                        <div class="mb-4">
                                            <div class="col-12">
                                                <td>
                                                    <input type="hidden" value="<%= products.productImage[i] %>" id="imageDatas">
                                                    <img class="rounded" style="width: 50px; height: 60px;"
                                                        src="/uploads/re-image/<%= products.productImage[i] %>"
                                                        alt="">
                                                    <span onclick="deleteSingleImage('<%= products.productImage[i] %>','<%= products._id %>')" style="position: absolute; margin-left: .5rem; cursor: pointer;" class="fa-thin fa-x">X</span>
                                                </td>
                                            </div>
                                        </div>
                                    </div>
                                    <% } %>
                                    <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                        <img src="" alt="" id="imgView1">
                                        <input class="form-control" type="file" name="images" id="input1"
                                            accept="image/png, image/jpeg, image/jpg"
                                            onchange="viewImage1(event), viewImage(event, 1)">
                                        <div id="images-error" class="error-message"></div>
                                    </div>
                                    <div class="image-cropper d-flex align-items-center"
                                        style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                        <img src="" id="croppedImg1" alt="">
                                        <button type="button" id="saveButton1" class="btn-sm btn-primary">Save</button>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                        <img src="" alt="" id="imgView2">
                                        <input class="form-control" type="file" name="images" id="input2"
                                            accept="image/png, image/jpeg, image/jpg"
                                            onchange="viewImage2(event), viewImage(event, 2)">
                                        <div id="images-error2" class="error-message"></div>
                                    </div>
                                    <div class="image-cropper d-flex align-items-center"
                                        style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                        <img src="" id="croppedImg2" alt="">
                                        <button type="button" id="saveButton2" class="btn-sm btn-primary">Save</button>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                        <img src="" alt="" id="imgView3">
                                        <input class="form-control" type="file" name="images" id="input3"
                                            accept="image/png, image/jpeg, image/jpg"
                                            onchange="viewImage3(event), viewImage(event, 3)">
                                        <div id="images-error3" class="error-message"></div>
                                    </div>
                                    <div class="image-cropper d-flex align-items-center"
                                        style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                        <img src="" id="croppedImg3" alt="">
                                        <button type="button" id="saveButton3" class="btn-sm btn-primary">Save</button>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                        <img src="" alt="" id="imgView4">
                                        <input class="form-control" type="file" name="images" id="input4"
                                            accept="image/png, image/jpeg, image/jpg"
                                            onchange="viewImage4(event), viewImage(event, 4)">
                                        <div id="images-error4" class="error-message"></div>
                                    </div>
                                    <div class="image-cropper d-flex align-items-center"
                                        style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                        <img src="" id="croppedImg4" alt="">
                                        <button type="button" id="saveButton4" class="btn-sm btn-primary">Save</button>
                                    </div>
                                </div>
                            </div>
                    </div>
                    <div>
                        <button class="btn btn-md rounded font-sm hover-up" type="submit">Publish</button>
                    </div>
                    </form>
                </div>
            </div>
        </div>
    </section>
    <script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
function deleteSingleImage(imageId, productId) {
    $.ajax({
        url: "/admin/product/deleteImage",
        method: 'post',
        data: {
            imageName: imageId,
            productId: productId,
        },
        success: function(response) {
            if (response.success) {
                window.location.reload();
            }
        }
    });
}

function viewImage1(event) {
    document.getElementById('imgView1').src = URL.createObjectURL(event.target.files[0]);
}

function viewImage2(event) {
    document.getElementById('imgView2').src = URL.createObjectURL(event.target.files[0]);
}

function viewImage3(event) {
    document.getElementById('imgView3').src = URL.createObjectURL(event.target.files[0]);
}

function viewImage4(event) {
    document.getElementById('imgView4').src = URL.createObjectURL(event.target.files[0]);
}

function viewImage(event, index) {
    let input = event.target;
    let reader = new FileReader();
    
    reader.onload = function() {
        let dataURL = reader.result;
        let image = document.getElementById('imgView' + index);
        image.src = dataURL;

        let cropper = new Cropper(image, {
            aspectRatio: 1,
            viewMode: 1,
            guides: true,
            background: false,
            autoCropArea: 1,
            zoomable: true
        });

        let cropperContainer = document.querySelector("#croppedImg" + index).parentNode;
        cropperContainer.style.display = "block";

        let saveButton = document.querySelector("#saveButton" + index);
        saveButton.addEventListener('click', async function() {
            let croppedCanvas = cropper.getCroppedCanvas();
            let croppedImage = document.getElementById("croppedImg" + index);
            croppedImage.src = croppedCanvas.toDataURL('image/jpeg', 1.0);

            let timestamp = new Date().getTime();
            let fileName = `cropped-img-${timestamp}-${index}.png`;

            croppedCanvas.toBlob(async (blob) => {
                let croppedFile = new File([blob], fileName, { type: 'image/png' });

                const dataTransfer = new DataTransfer();
                dataTransfer.items.add(croppedFile);
                document.getElementById('input' + index).files = dataTransfer.files;

                cropperContainer.style.display = "none";
                cropper.destroy();
            }, 'image/png');
        });
    };
    reader.readAsDataURL(input.files[0]);
}

let selectedImage = [];
document.getElementById('input1').addEventListener('change', handleFileSelect);

function handleFileSelect(event) {
    const addedImagesContainer = document.getElementById('addedImagesContainer');
    addedImagesContainer.innerHTML = "";
    const files = event.target.files;

    for (let i = 0; i < files.length; i++) {
        const file = files[i];
        selectedImage.push(file);

        const thumbnail = document.createElement('div');
        thumbnail.classList.add("thumbnail");

        const img = document.createElement('img');
        img.src = URL.createObjectURL(file);
        img.alt = "thumbnail";
        img.style.width = "50px";
        img.style.height = "auto";

        const removeIcon = document.createElement("span");
        removeIcon.classList.add("remove-icon");
        removeIcon.innerHTML = "×";
        removeIcon.addEventListener('click', function() {
            const index = selectedImage.indexOf(file);
            if (index !== -1) {
                selectedImage.splice(index, 1);
            }
            thumbnail.remove();
        });

        thumbnail.appendChild(img);
        thumbnail.appendChild(removeIcon);
        addedImagesContainer.appendChild(thumbnail);
    }
}

function validateForm() {
    clearErrorMessages();
    const name = document.getElementsByName('productName')[0].value;
    const description = document.getElementById('descriptionid').value;
    const price = document.getElementsByName('regularPrice')[0].value;
    const saleprice = document.getElementsByName('salePrice')[0].value;
    const category = document.getElementsByName('category')[0].value;
    const sizeS = document.getElementById('size_s').value.trim();
    const sizeM = document.getElementById('size_m').value.trim();
    const sizeL = document.getElementById('size_l').value.trim();
    const sizeXL = document.getElementById('size_xl').value.trim();
    let isValid = true;

    if (name.trim() === "") {
        displayErrorMessage('productName-error', 'Please enter a product name.');
        isValid = false;
    } else if (!/^[a-zA-Z\s]+$/.test(name.trim())) {
        displayErrorMessage('productName-error', 'Product name should contain only alphabetic characters.');
        isValid = false;
    }

    if (description.trim() === "") {
        displayErrorMessage('description-error', 'Please enter a product description.');
        isValid = false;
    } else if (!/^[a-zA-Z\s]+$/.test(description.trim())) {
        displayErrorMessage('description-error', 'Product description should contain only alphabetic characters.');
        isValid = false;
    }

    if (!/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) < 0) {
        displayErrorMessage('regularPrice-error', 'Please enter a valid non-negative price.');
        isValid = false;
    }

    if (!/^\d+(\.\d{1,2})?$/.test(saleprice) || parseFloat(saleprice) < 0) {
        displayErrorMessage('salePrice-error', 'Please enter a valid non-negative price.');
        isValid = false;
    }

    if (parseFloat(price) <= parseFloat(saleprice)) {
        displayErrorMessage('regularPrice-error', 'Regular price must be greater than sale price.');
        isValid = false;
    }

    if (!sizeS || isNaN(sizeS) || sizeS < 1 || sizeS > 100) {
        displayErrorMessage('sizeS-error', 'Size S must be a number between 0 and 100.');
        isValid = false;
    }

    if (!sizeM || isNaN(sizeM) || sizeM < 1 || sizeM > 100) {
        displayErrorMessage('sizeM-error', 'Size M must be a number between 0 and 100.');
        isValid = false;
    }

    if (!sizeL || isNaN(sizeL) || sizeL < 1 || sizeL > 100) {
        displayErrorMessage('sizeL-error', 'Size L must be a number between 0 and 100.');
        isValid = false;
    }

    if (!sizeXL || isNaN(sizeXL) || sizeXL < 1 || sizeXL > 100) {
        displayErrorMessage('sizeXL-error', 'Size XL must be a number between 0 and 100.');
        isValid = false;
    }

    if (!category) {
        displayErrorMessage('category-error', 'Please select a category.');
        isValid = false;
    }

    return isValid;
}

function displayErrorMessage(elementId, message) {
    var errorElement = document.getElementById(elementId);
    errorElement.innerText = message;
    errorElement.style.display = "block";
}

function clearErrorMessages() {
    const errorElements = document.getElementsByClassName('error-message');
    Array.from(errorElements).forEach(element => {
        element.innerText = '';
    });
    const generalError = document.getElementById('general-error');
    generalError.innerText = '';
    generalError.style.display = 'none';
}

// Handle form submission via AJAX
document.getElementById('editProductForm').addEventListener('submit', function(event) {
    event.preventDefault(); // Prevent default form submission

    if (!validateForm()) {
        return; // Stop if client-side validation fails
    }

    const form = this;
    const formData = new FormData(form);

    $.ajax({
        url: form.action,
        method: form.method,
        data: formData,
        processData: false,
        contentType: false,
        success: function(response) {
            if (response.success) {
                window.location.href = '/admin/product'; // Redirect on success
            } else {
                // Display backend error
                displayErrorMessage('general-error', response.message || 'An error occurred while updating the product.');
            }
        },
        error: function(xhr) {
            let errorMessage = 'An unexpected error occurred.';
            try {
                const response = JSON.parse(xhr.responseText);
                if (response.message) {
                    if (response.field) {
                        // Field-specific error
                        displayErrorMessage(`${response.field}-error`, response.message);
                    } else {
                        // General error
                        displayErrorMessage('general-error', response.message);
                    }
                } else {
                    displayErrorMessage('general-error', errorMessage);
                }
            } catch (e) {
                displayErrorMessage('general-error', errorMessage);
            }
        }
    });
});
    </script>
 <%-include('../../views/partials/admin/footer')%>