<%-include('../../views/partials/admin/header.ejs')%>
    <title>Manage Category Offers</title>
    <link rel="stylesheet" href="path/to/bootstrap.min.css">
    <link rel="stylesheet" href="path/to/fontawesome.min.css"> <!-- For icons -->
    <style>
        body {
            background-color: #f8f9fa; /* Light background for contrast */
            font-family: 'Arial', sans-serif; /* Modern, clean font */
            line-height: 1.8; /* Increased line height for better readability */
        }
        .container {
            margin: 50px auto; /* Center the container */
            padding: 40px; /* Ample padding */
            background-color: #ffffff; /* White background for the form */
            border-radius: 10px; /* Rounded corners */
            box-shadow: 0 2px 15px rgba(0, 0, 0, 0.1); /* Subtle shadow */
            max-width: 800px; /* Limit width for better focus */
        }
        h1, h2 {
            color: #343a40; /* Dark color for headings */
            margin-bottom: 40px; /* Increased space below headings */
            text-align: center; /* Center headings */
        }
        label {
            font-weight: bold; /* Make labels stand out */
            margin-bottom: 15px; /* Increased space below labels */
        }
        .form-group {
            margin-bottom: 25px; /* Space between form groups */
        }
        .form-control {
            border-radius: 5px; /* Rounded input fields */
            border: 1px solid #ced4da; /* Light border */
        }
        .form-control:focus {
            border-color: #007bff; /* Highlight border on focus */
            box-shadow: 0 0 5px rgba(0, 123, 255, 0.5); /* Subtle glow effect */
        }
        .btn-primary {
            background-color: #007bff; /* Bootstrap primary color */
            border: none;
            padding: 12px; /* Increased padding for buttons */
            font-size: 16px; /* Larger font size */
            border-radius: 5px; /* Rounded button */
            transition: background-color 0.3s ease; /* Smooth transition */
        }
        .btn-primary:hover {
            background-color: #0056b3; /* Darker on hover */
        }
        .list-group-item {
            border: none; /* Remove borders from list items */
            background-color: #f8f9fa; /* Match list background with body */
            padding: 15px; /* Added padding for list items */
            margin-bottom: 15px; /* Increased space between list items */
            border-radius: 5px; /* Rounded corners for list items */
        }
    </style>
</head>
<body>
  <div class="d-flex " style="gap: 7%;">
    <div class="container ms-0 " style="max-width: 450px;">
        <h1>Manage Category Offers</h1>
        <form id="offerForm">
            <div class="form-group">
                <label for="category">Select Category</label>
                
                <select id="category" class="form-control" required>
                  <option value="" disabled selected>Select Category</option>
                  <% categories.forEach(category => { %>
                    <!-- Populate categories dynamically -->
                        <option value="<%= category._id %>" ><%= category.categoryName %></option>
                        <% }) %>
                </select>
               
            </div>

            <div class="form-group">
                <label for="discountPercentage">Discount Percentage (%)</label>
                <input type="number" id="discountPercentage" class="form-control" min="0" max="100" required>
            </div>

            <div class="form-group">
                <label for="startDate">Start Date</label>
                <input type="date" id="startDate" class="form-control" required>
            </div>

            <div class="form-group">
                <label for="endDate">End Date</label>
                <input type="date" id="endDate" class="form-control" required>
            </div>

            <button type="submit" id="createOfferBtn" class="btn btn-primary btn-block">Create Offer</button>
        </form>

        
    </div>
    <div class="container bg-white">
    <h2 class="mt-5">Existing Offers</h2>
    <table class="table table-bordered table-hover">
      <thead class="thead-dark">
          <tr>
              <th scope="col">Category</th>
              <th scope="col">Discount (%)</th>
              <th scope="col">Start Date</th>
              <th scope="col">End Date</th>
              <th scope="col">Status</th>
              <th scope="col">Actions</th>
          </tr>
      </thead>
      <% offers.forEach(offer => { %> 
        <ul id="offersList" class="list-group">
          <tr>
             
              <td><%= offer.category.categoryName%></td>
            <td><%= offer.discountPercentage %></td>
            <td><%= new Date(offer.startDate).toLocaleDateString('en-GB') %></td>
            <td><%= new Date(offer.endDate).toLocaleDateString('en-GB') %></td>
            <td><%= offer.isActive %></td>
              
            <td>
              <i class="fas fa-edit edit"></i>
              <i class="fas fa-trash-alt delete" onclick="DeleteCategoryOffer('<%= offer._id %>')"> </i>
            </td>
          </tr>
        </ul>
        <% }) %>
      </div>
      </div>
    <script src="path/to/jquery.min.js"></script>
    <script>
        // Fetch existing offers and display
        // fetch('/api/offers')
        //     .then(response => response.json())
        //     .then(data => {
        //         const offersList = document.getElementById('offersList');
        //         data.forEach(offer => {
        //             const listItem = document.createElement('li');
        //             listItem.className = 'list-group-item';
        //             listItem.innerHTML = `<strong>Category:</strong> ${offer.category.categoryName}<br>
        //                                   <strong>Discount:</strong> ${offer.discountPercentage}%<br>
        //                                   <strong>Valid:</strong> ${new Date(offer.startDate).toLocaleDateString()} - ${new Date(offer.endDate).toLocaleDateString()}`;
        //             offersList.appendChild(listItem);
        //         });
        //     });

        // Handle offer creation
        document.getElementById('offerForm').addEventListener('submit', function(event) {
            event.preventDefault(); // Prevent form submission
            const category = document.getElementById('category').value;
            console.log(category);
            
            const discountPercentage = document.getElementById('discountPercentage').value;
            console.log(discountPercentage);
            
            const startDate = document.getElementById('startDate').value;
            console.log(startDate);
            
            const endDate = document.getElementById('endDate').value;
            console.log(endDate);
            
            fetch('/admin/offers/add', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ category, discountPercentage, startDate, endDate })
            })
            .then(response => response.json())
            .then(data => {
              if(data.success){
                Swal.fire({
                  icon:'success',
                  title:'Offer Added ',
                  text:"Offer applied succesully!",
                  timer:1500,
                  showConfirmbutton:false
                })
                .then(() => {
                  location.reload();
                })
                 
              }else{
                Swal.fire({
                  icon:'error',
                  title:"Error",
                  text:"Error adding offer",
                  
                })
              }
            })
            .catch((error) => {
              console.log(error);
              Swal.fire({
                icon:"error",
                title:"Error",
                text:"something went wrong!"
              })
              
            })
        });

        function DeleteCategoryOffer(CatOfferId){
          Swal.fire({
            icon:'warning',
            title:"Are you Sure",
            text:"You are about to delete this offer",
            showCancelButton:true,
            confirmButtonText:'Delete',
          })
          .then(result => {
            if(result.isConfirmed){
              fetch(`/admin/offer/delete/${CatOfferId}`,{
                method:"post",
                headers:{
                  "Content-Type":"application/json"
                }
              })
              .then(response => response.json())
              .then((data) => {
                if(data.success){
                  Swal.fire({
                    icon:'success',
                    title:"Offer deleted",
                    text:"Offer deleted successfully",
                    timer:1500,
                    showConfirmbutton:false
                  })
                  .then(() => {
                    location.reload()
                  })
                }else{
                  Swal.fire({
                    icon:'error',
                    title:"Error",
                    text:"Error deleting offer",
                    timer:1500,
                    showConfirmbutton:false

                  })
                }
              })
              .catch((error) => {
                console.log(error);
                Swal.fire({
                  icon: 'error',
                  title: 'Error',
                  text: 'Error deleting offer',
                  timer:1500,
                  showConfirmbutton:false
                })
              })
            }
          })
        }
    </script>

<%-include("../../views/partials/admin/footer.ejs")%>
